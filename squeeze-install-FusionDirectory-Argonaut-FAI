#!/bin/bash
# Shell script to install FAI managed by Fusion Directory
# FIXME: Not quite working
if [ "$USER" != "root" ]; then
        echo "Must be root to execute script..."
        exit 1
fi

# FIXME: prerequisite scripts (we should test these have run :
# squeeze-install-FusionDirectory
if [ ! -f /etc/fusiondirectory/fusiondirectory.conf ]; then
  echo "Run the squeeze-install-FusionDirectory script.  Fusion Directory must be"
  echo "installed and configured before we can continue..."
  exit 1
fi
# squeeze-install-FusionDirectory-plugin-DHCP
if [ ! -f /etc/dhcp/dhcpd.conf ]; then
  echo "Run the squeeze-install-FusionDirectory-plugin-DHCP script.  DHCPd"
  echo "must be installed and configured before we can continue..."
  exit 1
fi
# squeeze-install-FusionDirectory-plugin-DNS
if [ ! -f /etc/default/ldap2zone ]; then
  echo "Run the squeeze-install-FusionDirectory-plugin-DNS script.  Bind9"
  echo "must be installed and configured before we can continue..."
  exit 1
fi
# squeeze-install-FusionDirectory-Argonaut
if [ ! -f /etc/argonaut/argonaut.conf ]; then
  echo "Run the squeeze-install-FusionDirectory-Argonaut script."
  echo "Argonaut must be installed and configured before we can continue."
  exit 1
fi

echo ""
echo "WARNING!!!  You will need to put an apt repository in /var/www/debian"
echo "This script will try to do this for you, but a repo is more than 30"
echo "gigabytes and will take eg. 3 days on a 1.5mb connection.  You may want"
echo "to do this by hand BEFORE running this script.  Hit Ctrl-C to quit, or"
echo "<enter> to continue anyway..."
read dummy_val

echo "First we install required packages..."

# FIXME: Need to check the below packages to see if all are still required.
#        (Things have evolved quite quickly in this package).
if apt-get install -y --allow-unauthenticated debian-keyring fusiondirectory-plugin-fai fusiondirectory-plugin-fai-schema nfs-kernel-server fai-server syslinux libnet-libidn-perl libio-socket-ssl-perl libnet-ssleay-perl recode libnet-ldap-perl libconvert-asn1-perl hwinfo libhd16 ntp console-tools console-common console-data libconsole atftpd liblog-agent-perl liblockfile-simple-perl rsync debmirror; then
	echo "Installation of FAI prerequisite packages successful..."
else
	echo "Installation failed for FAI prerequisite packages.  Exiting..."
	exit 1
fi

apt-get install -y --allow-unauthenticated argonaut-fai-mirror argonaut-fai-nfsroot argonaut-fuse argonaut-fuse-fai-ldap argonaut-client-fai argonaut-fai-backend

# FIXME: The next beta shouldn't require these bugfixes.
sed -i 's@my (\$localuri) = \$uri =~ .*$@my (\$localuri) = \$uri;@' /usr/sbin/ldap2repository
sed -i 's@use warning;@use warnings;@' /usr/sbin/ldap2repository
sed -i 's@my $base = $ldapinfo->{BASE};@my $base = $ldapinfos->{BASE};@' /usr/sbin/ldap2repository
sed -i 's@my $ldapuris = $ldapinfo->{URIS};@my $ldapuris = $ldapinfos->{URIS};@' /usr/sbin/ldap2repository
sed -i 's@my $handle = $ldapinfo->{HANDLE};@my $handle = $ldapinfos->{HANDLE};@' /usr/sbin/ldap2repository

if [ -f /etc/ldap/schema/fusiondirectory/fai.ldif ]; then
	echo "Adding schemas to LDAP tree..."
else
	echo "Hopefully ldif versions of schemas will be packaged soon,"
	echo "but until this happens you will need to create these by hand."
	echo "You could use slaptest, or the schema2bcldif.sh script."
	echo "Please create ldif versions of all schemas in"
	echo "/etc/ldap/schema/fusiondirectory and hit <enter> to continue..."
	read dummy
fi
ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/fusiondirectory/fai.ldif
# FIXME: Should any indexes be added here?
/etc/init.d/slapd stop
sudo -u openldap slapindex
/etc/init.d/slapd start

# FIXME: Should I restart the fd client and server daemons here?

fusiondirectory-setup --update-cache --update-locales

# FIXME: A local mirror is now not required(?)  Update this instruction
echo ""
echo "*** IMPORTANT!! *** - Read, then complete the following :"
echo "When installing FAI clients speed is critical, therefore you almost"
echo "certainly need a Debian mirror on your local network.  Fusion Directory"
echo "stores information on repositories using 'repository service' objects,"
echo "and this information is used by Argonaut to build/maintain your local"
echo "repository."
echo "1) create a server object to represent an Internet apt mirror you want"
echo "   as your package source (eg. ftp.debian.org).  Then, inside this server"
echo "   object create a 'Repository service'."
echo "   Some example configuration values for a 'release':"
echo "   Release: squeeze"
echo "   URL: <the URL of your chosen source repository>"
echo "   Sections: main (you may want 'contrib' and 'non-free' in here also)"
echo "   Leave 'Parent server' blank"
echo "2) On the server object representing THIS machine : create a repository"
echo "   service with the external server as its parent. Populate 'Release'"
echo "   and 'Sections' as above, and a valid URL for this machine ie.:"
echo "   http://"`hostname --fqdn`"/debian"
echo "After you have made these changes an APT repository will be built using"
echo "this information.  This process will take a LONG time (if you haven't"
echo "already pre-populated /var/www/debian) as it requires over 30gb to download"
echo "from the Internet to /var/www/debian.  Be sure you have sufficient space!"
echo "< *** IMPORTANT!!! *** read and complete the above, then hit enter >"
read dummy_value

# We next generate a configuration for the debmirror tool, and a cron job to
# run debmirror.  Both these tasks are achieved using Argonaut ldap2repository.
# Below we read your servers default interface.  This is used by
# ldap2repository to look up your servers mac address, and this in turn helps
# the script look up the LDAP record for this server which contains the
# repository information entered into LDAP just before.
HOST_IP=`hostname --ip`
net_interface=`ifconfig | awk '/^[a-z]/ { I=$1}; /'$HOST_IP'/ {print(I)}'`
ldap2repository -r /var/www -p -v -j -i $net_interface

## FIXME: There is a cronjob /etc/cron.d/argonaut-mirror that runs ldap2repository
##        daily and on reboot.  This must also call ldap2repository with the switches
##        we used above.  Should we instead configure this elsewhere?
# NOTE: I've removed the -n switch which means obsolete packages get deleted
#       from the repository.  This makes the repo smaller, but could cause
#       problems if a client tries to install a recently deleted package.
sed -i 's@ldap2repository -n -p@ldap2repository -r /var/www -p -i '$net_interface'@' /etc/cron.d/argonaut-fai-backend

# We also need an Apache configuration to make this repository accessible.
cat > /etc/apache2/sites-available/debmirror <<-EOF
	# Include Fusion Directory to your web service
	Alias /debian /var/www/debian
	
	<Location /debian>
	Options Indexes FollowSymLinks
	Order allow,deny
	Allow from all
	</Location>
EOF

a2ensite debmirror

# The debmirror command should verify our mirror
gpg --keyring /usr/share/keyrings/debian-archive-keyring.gpg --export \
 | gpg --no-default-keyring --keyring trustedkeys.gpg --import

# The cron script to create the mirror lives in /etc/fusiondirectory/fai/ .
# FIXME: Are default permissions OK for this file?
# !!!DOWNLOADING WILL PROBABLY TAKE A LOOOOOONG TIME IF YOU START FROM SCRATCH!!!
echo ""
echo "Do you want to update your repository now?  (If you want to do this later"
echo "you will need to execute : ldap2repository -r /var/www -p -n -v -i "$net_interface")."
echo "Input y or n, then hit <enter> to continue..."
read repo_choice
if [ ! "$repo_choice" = "n" ]; then 
	sh /etc/argonaut/fai/mirror-update-cronjob
fi

sed -i 's@path            = /srv/www/debian@path            = /var/www/debian@' /etc/argonaut/argonaut.conf

# After installing these packages a number of different Fusion Directory
# services can be added to server objects.  GOto is the general client
# management framework and enables lots of additional things in the Fusion
# Directory interface.  In addition to FAI it can manage thin clients, desktops
# and servers.
# NOTE: The Linux desktop side of the goto agents is oriented towards KDE.

# The following services will now be available :
# --------------------------------
# File service (Shares)
# Kiosk profile service
# LDAP service - required or FAI
# Print service
# Repository service - required for FAI
# Syslog server
# Syslog service database
# Terminal service
# Time service (NTP) - required for FAI
# --------------------------------
# ::There are also several new icons.
# : In "My account" :
# Environment
# : In "Administration" :
# Applications
# Mime types
# Hotplug devices
# Software deployment
# : In "Addons" :
# Deployment Status

## FIXME: Is there a better place to put configurations than under /srv?
# Edit [FAI] section and [LDAP] sections in /etc/argonaut-fuse/argonaut-fuse.conf
sed -i 's@#\[FAI\]@\[FAI\]@' /etc/argonaut-fuse/argonaut-fuse.conf
# FIXME: The following doc doesn't seem to work.  Why?
# To debug FAI you can add "createvt" and "sshd" to fai_flags.  This will
# allow sshing to the client during installation, and creation of an
# interactive virtual terminal.  See fai-chboot for documentation on other
# flags.
sed -i 's@#fai_flags=verbose,syslogd,reboot vga=0@fai_flags=verbose,syslogd,reboot vga=0@' /etc/argonaut-fuse/argonaut-fuse.conf
sed -i 's@#nfs_opts=@nfs_opts=@' /etc/argonaut-fuse/argonaut-fuse.conf
sed -i 's@#nfs_root=/srv/fai/nfsroot@nfs_root=/srv/fai/nfsroot@' /etc/argonaut-fuse/argonaut-fuse.conf
sed -i 's@#union=aufs@union=aufs@' /etc/argonaut-fuse/argonaut-fuse.conf

# ...and in the [LDAP] section :
# FIXME: What auth_dn do we need to set here, and do we need to
# modify the argonaut-fuse.conf file permissions for security purposes.
# I THINK this is set only if auths are required for LDAP connections(???)
# Benoit sets this to the LDAP admin user/pass, so that's what I've done.
# We first get our admin dn and password from fusiondirectory.conf (these vars
# are also used later in the script) :
LDAP_ADMIN_DN=`grep 'adminDn="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{ print $2 }' #| awk -F',' '{ print $1 }'`
echo "LDAP admin dn extracted from /etc/fusiondirectory/fusiondirectory.conf"
LDAP_ADMIN_PW=`grep 'adminPassword="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{print $2 }'`
echo "LDAP admin password extracted from /etc/fusiondirectory/fusiondirectory.conf"

# ...then configure our TFTPD server to bind to LDAP as admin.
sed -i 's@#auth_dn=@auth_dn='$LDAP_ADMIN_DN'@' /etc/argonaut-fuse/argonaut-fuse.conf
sed -i 's@#auth_pwd=@auth_pwd='$LDAP_ADMIN_PW'@' /etc/argonaut-fuse/argonaut-fuse.conf

# We now edit /etc/fai/make-fai-nfsroot.conf and change some variables :
#-----------------------------------------------------------
# FAI_DEBOOTSTRAP - name of Debian distro and repo we want our NFSROOT to be
#                   built from.

# When our clients netboot they need to know where to pull their packages from
sed -i 's@FAI_DEBOOTSTRAP=".*"@FAI_DEBOOTSTRAP="squeeze http://'`hostname --fqdn`'/debian"@' /etc/fai/make-fai-nfsroot.conf
# We need make-fai-nfsroot to do some extra FusionDirectory-specific steps eg.
# copy configuration from LDAP etc...  A hook script to do this has been
# placed in /etc/fai/nfsroot-hooks, and we uncomment the NFSROOT_HOOKS
# option so make-fai-nfsroot will scan this directory for hook scripts.
sed -i 's@#NFSROOT_HOOKS=@NFSROOT_HOOKS=@' /etc/fai/make-fai-nfsroot.conf

## Extra make-fai-nfsroot options which you may find useful :
# NFSROOT_ETC_HOSTS - This is /etc/hosts style entry/s containing host/s
# important for client machines eg. the Debian mirror, Beowulf master 
# node addrs etc...  This variable can contain multiple lines if required.
# The contents of this variable will be appended to the clients own
# /etc/hosts file.  This variable is particularly useful when no
# DNS is available.  We don't enable this variable by default, but 
# is useful enough that I've made a note here. Example entry :
# NFSROOT_ETC_HOSTS="192.168.1.1 debmirror debmirror.example.com"

# FAI_ROOTPW - This contains the encrypted root password all install
# clients will use during the installation process.  Used for ssh logins.
# We replace the FAI default of "fai" with a user-entered p/w.
# FIXME: I should find a better way of accepting a password.
echo ""
echo "Please enter a root password for use on FAI clients : "
read client_root_pw
sed -i "s@\$1\$.*\'@"`echo $client_root_pw | mkpasswd -Hmd5 -s`"'@" /etc/fai/make-fai-nfsroot.conf
#-------------------------------------------------------------

# make-fai-nfsroot needs to know where to install packages from.
# FIXME: Does this also get installed into the final /etc/apt/sources.list
#        for clients?
# FIXME: This repo should also have a local mirror!
# FIXME: At the moment I need a combination of TWO FusionDirectory repos.
#        Delete later and either make a local FusionDirectory repo, or some
#        other solution.
#        NOTE:: My local repo only has 'main', not 'contrib' or 'non-free'
#               Change this?
sed -i 's@deb http://.*/debian .*$@deb http://'`hostname --fqdn`'/debian squeeze main\
deb http://repos.fusiondirectory.org/argonaut-beta/ ./\
deb http://repos.fusiondirectory.org/debian/ stable main@' /etc/fai/apt/sources.list
# FIXME: Perhaps we should also cache the debian security website?
sed -i 's@deb http://.*/debian-security .*$@deb http://security.debian.org/ squeeze/updates main@' /etc/fai/apt/sources.list

# /etc/fai/NFSROOT contains instructions for building the root filesystem the
# FAI client systems will use.  We've added the non-free Broadcom firmware
# to the list of packages to be installed. We also install a few extra Fusion
# Directory related packages which allow (for example) pulling FAI
# configuration from LDAP instead of an NFS filesystem on the server, and
# adding a FAI progress bar.
sed -i 's@liblinux-lvm-perl@liblinux-lvm-perl\
rsyslog dialog gawk bind9-host libpci2 ldap-utils\
vim psmisc debootstrap@' /etc/fai/NFSROOT
sed -i 's@# needed for the simple examples@# needed for the Fusion Directory integration@' /etc/fai/NFSROOT
sed -i 's@cfengine2 libapt-pkg-perl@reprepro argonaut-fai-progress argonaut-common argonaut-client-fai libdatetime-perl locales-all gettext\
\
# needed for non-free broadcom firmware\
firmware-bnx2@' /etc/fai/NFSROOT

SERVER_IP=`hostname --ip-address`

## FIXME: These instructions are old, but perhaps useful for showing a way
##        to install custom packages :
## We set up the gosa-si packages in a file-based repository in the new
## NFSROOT, and arrange a FAI hook script to add this repo and install
## the packages from it.
#apt-get install -y --allow-unauthenticated reprepro
#mkdir -p /etc/fai/packages/conf
#cp /usr/src/gosa-si*.deb /etc/fai/packages
#cat > /etc/fai/packages/conf/distributions <<-EOF
#	Origin: Debian
#	Label: Debian-All
#	Suite: stable
#	Codename: squeeze
#	Version: 6.0
#	Architectures: i386 amd64
#	Components: main
#	Description: Debian Squeeze
#EOF
#cd /etc/fai/packages
#reprepro includedeb squeeze /etc/fai/packages/*.deb
#echo "deb file:/etc/fai/packages squeeze main" >> /etc/fai/apt/sources.list
#echo '$ROOTCMD apt-get update
#$ROOTCMD apt-get --allow-unauthenticated -qq install gosa-si-common gosa-si-client' > /#etc/fai/nfsroot-hooks/01-install-gosa-si-client

# FIXME: Bug workaround:
# <pav5088> bilbo-the-hobbit, I'm running "make-fai-nfsroot -v" and I get the
#           following error :
# <pav5088> nfsroot-hooks/fusiondirectory: Copy argonaut.conf and ldap.conf
# <pav5088> cp: cannot stat `/etc/ldap/ldap-fai.conf': No such file or directory
# <bilbo-the-hobbit> pav5088: just do a symlink from you ldap.conf
# <bilbo-the-hobbit> pav5088: will correct that
ln -s /etc/ldap/ldap.conf /etc/ldap/ldap-fai.conf

# Create fai NFSROOT.  Run with -v for verbose output.
make-fai-nfsroot -v
# Log file written to /var/log/fai/make-fai-nfsroot.log

# We need to NFS-export filesystems required by FAI
# FIXME: I've read NFS filesystems should have their own partition for security.
#        Is this true?  If so warn user.
# FIXME: This manual process should perhaps be done another way.  Speak to Benoit.
echo ""
echo "After booting a kernel from the network via TFTP our FAI client machines"
echo "will try to mount both a root filesystem and FAI configuration via NFS."
echo "Please select which network/s these filesystems should be accessible from."
echo "1 - 192.168.1.0/255.255.255.0"
echo "2 - 10.0.0.0/255.255.255.0"
echo "3 - any network (ie. *)"
echo "...or you can type a network/mask pair manually:"
read NETWORK_CONFIG
if [ "$NETWORK_CONFIG" = "1" ]; then
    NETWORK_CONFIG="192.168.1.0/255.255.255.0"
elif [ "$NETWORK_CONFIG" = "2" ]; then
    NETWORK_CONFIG="10.0.0.0/255.255.255.0"
elif [ "$NETWORK_CONFIG" = "3" ]; then
    NETWORK_CONFIG="*"
fi

# FIXME: I THINK an entry gets created in /var/lib/nfs/etab without a need
#        for the following comand :
# echo "/srv/fai/nfsroot "$NETWORK_CONFIG"(async,ro,no_subtree_check,root_squash)" >> /etc/exports
exportfs -a


# For the moment I'm copying the simple FAI configuration examples.
# FIXME: Perhaps put in something directly useful to Fusion Directory using
#        ldifs instead of generic examples from fai-doc.
apt-get install fai-doc

# FIXME : Should we place configurations in a better place than /srv?
# We need to enable clients to netboot via pxe/tftp
#cp /usr/lib/syslinux/pxelinux.0 /srv/tftp/

# FIXME: I presume this is if a mirror is enabled?
# Uncomment the following (and get rid of "disabled_") from fusiondirectory.conf
# from <location name="default" :
#              disabled_gosaSupportURI="gosa-si-secret@server:20081}"
#              disabled_gosaSupportTimeout="15"
# NOTE: This no longer seems required for later versions from 2.6.6
#
# ...get the gosa-si-secret password (in the URI above) from /etc/gosa-si/server.conf
#
# [GOsaPackages]
# enabled = true
# key = secret-gosa-password

# DAK = Debian Archive Kit
# http://packages.debian.org/source/unstable/dak (build dependancies)
#cd /usr/src
#wget http://ftp.de.debian.org/debian/pool/main/d/dak/dak_1.0-8.6.tar.gz
#tar -zxvf dak_1.0-8.6.tar.gz
#
# Perhaps we could use an apt-proxy (eg. Approx) instead of setting
# up a mirror like DAK where a full featured mirror isn't required?
#
# From the mailing list about enabling FAI :
#can you set the IP-Address of eth0 in the LDAP-Entry of your Server  
#(also the macaddress of that interface)? And make sure that the fqdn  
#of your host is resolvable via DNS.
#
# Edit the following variables in /etc/fai/make-fai-nfsroot.conf
# FAI_DEBOOTSTRAP
# 
#    For building the nfsroot there's the command called debootstrap(8).
# It needs the location of a Debian mirror and the name of the
# distribution (etch, lenny, sid) for which the basic Debian system
# should be built.
#
# NFSROOT_ETC_HOSTS
# 
#     If you use HTTP or FTP access to the Debain mirror, add its
# IP-address and the name to this variable. For a Beowulf master node,
# add the name and IP-address of both networks to it. This variable is
# not needed when the clients have access to a DNS server.

## FAI - Understanding Class Types :
# * Profile - groups of class names.  Doesn't work if you don't
#   already have classes
# * Partition table - sets up disk layout.  Requires gosa-si(?)
# * Scripts
# * Hooks
# * Variables
# * Templates
# * Package list

# Some notes on package lists, release and section names :
# gosa-si-server builds some database files from your debian mirror.
# in /var/lib/gosa-si :
# FIXME: at the moment only packages.db is being built. Bug? Setup problem??
# fai_release.db : contains a list of debian releases
# fai_server.db : This contains URLs for various debian server mirrors.
# packages.db : List of Debian package files
# 
# Some brief explanations from Benoit on the other files
# FIXME: These descriptions aren't really clear - fix.
# servers.db : is in a multi setup environment (???)
# client.db : is when clients appear and are managed by Fusion Directory
#             (Arphandler?)
# incoming.db : is for new clients
# foreign_clients.db : not used
#
#  To examine these *.db files install sqlite3 and :
# sqlite3 <filename.db> ".dump"
# ...will dump the contents of the given filename.
#
# You can FORCE a release to be listed by adding an ou eg. ou=squeeze
# under ou=fai,ou=configs,ou=systems,<base> and adding an objectClass
# of FAIbranch.
# FIXME: I'm forcing things right now, and I probably shouldn't be.  FIX!

LDAP_BASE_DN=`ldapsearch -Y EXTERNAL -H ldapi:/// -b cn=config olcSuffix | grep ^olcSuffix | awk '/ */{ print $2 }'`
LDAP_ADMIN_DN=`grep 'adminDn="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{ print $2 }'`
LDAP_ADMIN_PW=`grep 'adminPassword="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{print $2 }'`

# FIXME: We should break this into two parts in case ou=fai already
#        exists and breaks the ldapadd...  we'll still want
#        ou=squeeze to be added in any case.  Also we should do
#        the add using a different method (see other scripts).
cat > /tmp/fai-ldap-objects.ldif  <<-EOF
	dn: ou=fai,ou=configs,ou=systems,$LDAP_BASE_DN
	objectclass: organizationalUnit
	objectclass: top
	ou: fai
	
	dn: ou=squeeze,ou=fai,ou=configs,ou=systems,$LDAP_BASE_DN
	objectclass: organizationalUnit
	objectclass: top
	objectclass: FAIbranch
	ou: squeeze
EOF

# -x - use simple authentication instead of SASL FIXME: Does this make a difference?
#ldapadd -H <ldap uri> -x -D <binddn> -w <passwd> -f /tmp/new-ldap-user.ldif
ldapadd -H ldaps://127.0.0.1:636 -x -D $LDAP_ADMIN_DN -w $LDAP_ADMIN_PW \
  -f /tmp/fai-ldap-objects.ldif

# The database files are built when gosa-si is restarted, and it takes some
# time.  Check /var/log/gosa-si-server.log to see when the db files have
# been built.  (It should take around 5-10 minutes).

/etc/init.d/argonaut-server restart
/etc/init.d/argonaut-client-management restart

# We need to refresh fts, the "fuse-tftp-supplicant" ie. the daemon
# that populates the pxelinux.cfg directory for tftp.
/etc/init.d/argonaut-fuse stop
umount /srv/fai/boot/pxelinux.cfg
/etc/init.d/argonaut-fuse start

# FIXME: In Fusion Directory 2.6.7 this is suddenly required...  is it a bug?
sed -i 's@copyPaste="false"@copyPaste="true"@' /etc/fusiondirectory/fusiondirectory.conf
# FIXME: The apache restart is probably is not required, but I've put it in anyway.  Find out one way or the other.
fusiondirectory-setup --update-cache --update-locales
/etc/init.d/apache2 restart

# FIXME: We need to give some further instruction on using FAI /w Fusion
#        Directory here.

echo ""
echo "Be sure your DNS server is up to date with what is in LDAP by executing :"
echo "ldap2bind"
echo ""
echo "The following services should be added to a server in your Fusion Directory"
echo "infrastructure before setting up FAI :"
echo "   * Repository service/s - you should have already added this"
echo "   * Time service (NTP) - just a list of ntp services.  We installed a local"
echo "                          ntp service.  This isn't required. Debian hosts NTP."
echo "				eg. 0.debian.pool.ntp.org  (servers numbered 0 to 4)"
echo "   * LDAP service"
echo "   * DNS service"
echo "   * DHCP service - In the Bootup configuration add fai/pxelinux.0 as the boot"
echo "                    filename."

# Troubleshooting: Check out the LOGUSER variable in /etc/fai/fai.conf on your server.
#
# You must create a user eg. fai, and create an rhosts file to allow the root user
# on client machines to access this user without a password. Example of
# /home/<username>/.rhosts :
#           10.0.2.15 root
#
# chgrp fai /srv/tftp/fai;chmod g+w /srv/tftp/fai
#
# /etc/pam.d/rsh
#           #%PAM-1.0
#           #
#           auth     required       pam_rhosts.so
#           auth     required       pam_nologin.so
#           auth     required       pam_env.so
#           auth     required       pam_unix.so

