#!/bin/bash
# This script installs and configures the Fusion Directory DNS plugin and
# supporting software.  The LDAP and DNS servers are installed locally.

# We must run this script as root
if [ "$USER" != "root" ]; then
        echo "Must be root to execute script..."
        exit 1
fi

# FIXME: prerequisite scripts (we should test these have run :
# squeeze-install-FusionDirectory
if [ ! -f /etc/fusiondirectory/fusiondirectory.conf ]; then
  echo "Run the squeeze-install-FusionDirectory-2.6 script before this one."
  echo "Fusion Directory must be installed and configured before we can continue."
  exit 1
fi

# squeeze-install-FusionDirectory-Argonaut
if [ ! -f /etc/argonaut/argonaut.conf ]; then
  echo "Run the squeeze-install-FusionDirectory-Argonaut script."
  echo "Argonaut must be installed and configured before we can continue."
  exit 1
fi

# Install required software :
# Bind9 - the DNS server
# ldap2zone - converts LDAP DNS records into a text config file for Bind9.
# (we need to download this in source form and compile it)
# dpkg-dev, subversion - needed for downloading and building the
# ldap2zone package
apt-get update
apt-get -y --allow-unauthenticated install bind9 dpkg-dev libldap2-dev ldap-utils subversion fusiondirectory-plugin-dns fusiondirectory-plugin-dns-schema debhelper dpatch argonaut-ldap2zone

# We need to configure slapd to include this dnszone schema.  We've also
# added a couple of (optional) indexes here to boost performance.
# FIXME: Once ldifs are bundled with Fusion Directory this can go...
if [ -f /etc/ldap/schema/fusiondirectory/dnszone.ldif ]; then
	echo "Adding schemas to LDAP tree..."
else
	echo "Hopefully ldif versions of schemas will be packaged soon,"
	echo "but until this happens you will need to create these by hand."
	echo "You could use slaptest, or the schema2bcldif.sh script."
	echo "Please create an ldif version of dnszone.schemas in"
	echo "/etc/ldap/schema/fusiondirectory and hit <enter> to continue..."
	read dummy
fi
ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/fusiondirectory/dnszone.ldif

cat > /tmp/fix.ldif <<-EOF
	dn: olcDatabase={1}hdb,cn=config
	replace: olcDbIndex
	olcDbIndex:   zoneName						     eq
	olcDbIndex:   relativeDomainName                                     eq
EOF
ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/fix.ldif
rm /tmp/fix.ldif
/etc/init.d/slapd stop
#should we run slapindex as a user other than root?
sudo -u openldap slapindex
/etc/init.d/slapd start

# We need to either uncomment or add the DNS plugin into Fusion Directory's
# config.
if grep '<!-- *<tab class="servdns" name="DNS" /> *-->' /etc/fusiondirectory/fusiondirectory.conf; then
sed -i 's@<!-- *<tab class="servdns" name="DNS" /> *-->'\
'@    <tab class="servdns" name="DNS" />'\
'@' /etc/fusiondirectory/fusiondirectory.conf
        echo "Uncommented the DNS plugin entry in fusiondirectory.conf"
else
        if ! grep servdns /etc/fusiondirectory/fusiondirectory.conf; then
                sed -i 's@<serverservice>'\
'@<serverservice>\
    <tab class="servdns" />'\
'@' /etc/fusiondirectory/fusiondirectory.conf
                echo "Added a DNS plugin entry to fusiondirectory.conf"
        else
                echo "The DNS plugin is already enabled in your fusiondirectory.conf"
        fi
fi

## If our LDAP server doesn't accept anonymous binds we might need the admin
## accounts DN as part of our ldap2zone conf.  Leaving the following line
## commented out for future use if we ever decide to add this to the script.
#LDAP_CONNECT_DN=`grep 'admin="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{ print $2 }' #| awk -F',' '{ print $1 }'`

# Configure the named daemon so LDAP generated DNS zones are loaded
if grep /etc/bind/named.conf.ldap2zone /etc/bind/named.conf; then
	echo "/etc/bind/named.conf already configured..."
else
	echo "Configuring /etc/bind/named.conf to load LDAP-generated zones..."
	sed -i 's@include "/etc/bind/named.conf.options";'\
'@include "/etc/bind/named.conf.options";\
include "/etc/bind/named.conf.ldap2zone";'\
'@' /etc/bind/named.conf
fi

# ldap2zone requires this file to be created
touch /etc/bind/named.conf.ldap2zone

## FIXME: This command may not be required.  Test...
fusiondirectory-setup --update-cache --update-locales

# FIXME: We could populate the instructions with good guesses of what the
#        user should fill in.
echo ""
echo ">>> IMPORTANT - DO THIS BEFORE CONTINUING <<<"
echo "In the Fusion Directory GUI you'll need to create or edit a server object"
echo "in 'System Management'.  Because this script installs DNS on"
echo "the local machine it will be a server object representing THIS"
echo "server.  You must add a DNS service to this object and create"
echo "a DNS zone.  You'll need to enter at least your Zone Name,"
echo "Network address, primary dns server for this zone and mail address."
echo "eg. 'example.com', '192.168.1.0', 'ns1.example.com' and 'me@example.com'"
echo "NOTE::Your zone won't be saved until you hit 'Save' and then 'OK'"
echo "You must then enable DNS for at least one host eg. your current server"
echo "object."
#FIXME: Mention enabling an argonaut-dns object...  and explain some concepts
#       like (as benoit says) :
#        "allow notify" is used for notification between master/slave dns
#        like 194.134.35.45;123.56.45.78;
echo "< WHEN FINISHED hit enter to continue... >"
read my_dummy_value

echo "ldap2bind being run for the first time..."
echo "NOTE: This will give errors unless at least one host has been added to DNS."
# Make sure bind is running first...
/etc/init.d/bind9 restart

#FIXME: Perhaps some instructions on checking name resolution is functioning correctly?
