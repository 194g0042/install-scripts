#!/bin/bash
# Shell script to install SOGo Groupware server authing against LDAP
# FIXME: This script really needs a broad overview of what's going on, but
# it has been an effort just to get things working right.  Phew!
# Also the documentation is a bit muddled and not entirely correct at this
# time.  Oh well.
if [ "$USER" != "root" ]; then
        echo "Must be root to execute script..."
        exit 1
fi

echo "WARNING! : At this time this script only works with Debian Wheezy"
echo "Feel free to expand this script beyond this scope."
echo "Ctrl-C to exit, or <enter> to continue :"
read dummy_val

# Required for LDAP access a little further down...
apt-get -y install ldap-utils

# We need our LDAP admin dn and password...
if [ ! -f /etc/fusiondirectory/fusiondirectory.conf ]; then
  echo "FusionDirectory is not installed locally.  Cannot autopopulate admin info."
  echo "Please enter your LDAP admin dn (eg. cn=admin,dc=example,dc=com):"
  read LDAP_ADMIN_DN
  echo "Please enter your LDAP admin password:"
  read LDAP_ADMIN_PW
else
  # fusiondirectory.conf contains some useful info we'll use later...
  LDAP_ADMIN_DN=`grep 'adminDn="' /etc/fusiondirectory/fusiondirectory.conf | \
    awk -F'"' '{ print $2 }' #| awk -F',' '{ print $1 }'`
  echo "LDAP admin dn extracted from /etc/fusiondirectory/fusiondirectory.conf"
  LDAP_ADMIN_PW=`grep 'adminPassword="' /etc/fusiondirectory/fusiondirectory.conf | \
    awk -F'"' '{print $2 }'`
  echo "LDAP admin password extracted from /etc/fusiondirectory/fusiondirectory.conf"
fi

if ldapsearch -x; then
  LDAP_BASE_DN=`ldapsearch -Y EXTERNAL -H ldapi:/// -b cn=config olcSuffix | \
    grep ^olcSuffix | awk '/ */{ print $2 }'`
  echo "Base DN extracted from slapd.d configuration : "$LDAP_BASE_DN
  LDAP_HOSTNAME=`grep "^URI" /etc/ldap/ldap.conf | awk -F'/' '{print $3 }'`
else
  echo "Can't find any local LDAP configuration information..."
  echo "Please enter your LDAP base DN (eg. dc=example,dc=com):"
  read LDAP_BASE_DN
  echo ""
  echo "Please enter your LDAP server hostname (or ctrl-c to exit):"
  read LDAP_HOSTNAME
  #FIXME: need to test and verify.  Also, port???
  cat >> /etc/ldap/ldap.conf <<-EOF
	URI     ldaps://$LDAP_HOSTNAME/
	
	TLS_REQCERT never
EOF
fi

# ...and Cyrus+Postgres server name...
if [ ! -f /etc/cyrus.conf ] || [ ! -f /etc/postfix/main.cf ]; then
  echo "Cyrus and Postfix aren't installed locally."
  echo "Enter your email server hostname (or ctrl-c to exit):"
  read EMAIL_HOSTNAME
  if nc -z $EMAIL_HOSTNAME 25; then
    echo "$EMAIL_HOSTNAME has an open smtp port...  continuing..."
  else
    echo "$EMAIL_HOSTNAME does not seem to be reachable.  Fix this."
    exit 1
  fi
else
  EMAIL_HOSTNAME="localhost"
fi

cat >> /etc/apt/sources.list <<-EOF
	deb http://inverse.ca/debian wheezy wheezy
EOF

# FIXME: I THINK installing all the postgresql-9.1 stuff first should stop
#        mysql-server being installed...  make sure this is the case and
#        remove this note.
apt-get update
if apt-get -y --allow-unauthenticated install postgresql-9.1 apache2 apache2-mpm-prefork sope4.9-gdl1-postgresql sope4.9-libxmlsaxdriver sope4.9-stxsaxdriver; then
	echo "SOGo prerequisite packages successfully installed..."
else
	echo "There was a failure installing the SOGo prerequisite packages.  Exiting..."
	exit 1
fi

if apt-get -y --allow-unauthenticated install sogo; then
	echo "SOGo package successfully installed..."
else
	echo "There was a failure installing the SOGo package.  Exiting..."
	exit 1
fi

# Apache has commands to enable modules, so we install the ones SOGo needs.
a2enmod proxy
a2enmod proxy_balancer
a2enmod proxy_http

echo "Dropping old databases if they exist.  Ignore the following errors if not"
sudo -u postgres psql -c "DROP DATABASE sogo"
sudo -u postgres psql -c "DROP USER sogo"

sudo -u postgres createuser -S -D -R -E sogo

# FIXME: Instead of using a password the SOGo Installation Guide uses
# a trust setting for 127.0.0.1 .  Could this be a security risk???

# We randomly generate a password which we use to create our database user
# NOTE:: I've filtered out any special characters that could confuse things.
POSTGRES_PW=`openssl rand -base64 30|tr -dc _A-Z-a-z-0-9`
sudo -u postgres psql -c "ALTER USER sogo WITH ENCRYPTED PASSWORD '$POSTGRES_PW'"
sudo -u postgres createdb -O sogo sogo

# We should allow access to the SOGo server.
sed  -i 's@<Proxy balancer://sogocluster>@<Proxy balancer://sogocluster>\
  Order allow,deny\
  Allow from all@' /etc/apache2/conf.d/SOGo.conf
#  We could allow SOGo clients more selectively if required.

# Also, there are some wrong paths in SOGo.conf
# FIXME: Is this still true?  Remove this if it's no longer the case.
sed  -i "s@/usr/GNUstep/System/Library/SOGo@/usr/lib/GNUstep/SOGo@" /etc/apache2/conf.d/SOGo.conf

if [ -e  /home/sogo/GNUstep/Defaults/.GNUstepDefaults ]; then
        cp /home/sogo/GNUstep/Defaults/.GNUstepDefaults \
	   /home/sogo/GNUstep/Defaults/.GNUstepDefaults.backup
fi

# Now we must configure the SOGo daemon.  Its config file lives in
# /home/sogo/GNUstep/Defaults/.GNUstepDefaults .  We don't edit this file
# directly...  we change it with the "defaults" command which we need to run
# as user "sogo".
#
# NOTE: An attempt is made to fill this config file with reasonable values at
# runtime.  Note the use of shell variables and inline commands during
# configuration.

# FIXME: Don't make SOGoDefaultMailDomain equal dnsdomainname.  It should be set
# to whatever Postfix is set to.

sudo -u sogo defaults write sogod SOGoTimeZone `cat /etc/timezone`

# The following line was added to prevent the following error in syslog :
# terminating app, vMem size limit (200 MB) has been reached
# FIXME: Is this limit still set too low?
sudo -u sogo defaults write sogod SxVMemLimit 512

sudo -u sogo defaults write sogod WOParsersUseUTF8 YES
sudo -u sogo defaults write sogod WOMessageUseUTF8 YES
sudo -u sogo defaults write sogod SOGoMailDomain `dnsdomainname`
sudo -u sogo defaults write sogod NGUseUTF8AsURLEncoding YES
sudo -u sogo defaults write sogod WOUseRelativeURLs NO
sudo -u sogo defaults write sogod SOGoLanguage English
sudo -u sogo defaults write sogod SOGoAppointmentSendEMailNotifications YES
sudo -u sogo defaults write sogod SOGoFoldersSendEMailNotifications YES
sudo -u sogo defaults write sogod SOGoACLsSendEMailNotifications YES
sudo -u sogo defaults write sogod WOPort 20000
sudo -u sogo defaults write sogod SOGoMailingMechanism smtp
sudo -u sogo defaults write sogod SOGoSMTPServer $EMAIL_HOSTNAME
sudo -u sogo defaults write sogod SOGoIMAPServer $EMAIL_HOSTNAME
sudo -u sogo defaults write sogod OCSSessionsFolderURL postgresql://sogo:sogo@localhost:5432/sogo/sogo_sessions_folder


sudo -u sogo defaults write sogod SOGoAuthenticationMethod LDAP
sudo -u sogo defaults write sogod SOGoUserSources '({CNFieldName = cn;
             IDFieldName = cn; UIDFieldName = uid; baseDN =
             "ou=people,'$LDAP_BASE_DN'";
             bindDN="'$LDAP_ADMIN_DN'";
	     bindFields = uid; encryption = ssl;
             bindPassword = '$LDAP_ADMIN_PW'; canAuthenticate = YES; displayName =
             "Shared Addresses"; hostname = '$LDAP_HOSTNAME'; id = shared;
             isAddressBook = YES; port=636})'
sudo -u sogo defaults write sogod SOGoProfileURL\
       'postgresql://sogo:'$POSTGRES_PW'@localhost:5432/sogo/sogo_user_profile'
sudo -u sogo defaults write sogod OCSFolderInfoURL\
       'postgresql://sogo:'$POSTGRES_PW'@localhost:5432/sogo/sogo_folder_info'

# We need to customise the SOGo Apache config file to our environment
sed -i 's@^.*RequestHeader set "x-webobjects-server-name" ".*$@  RequestHeader set "x-webobjects-server-name" "'`hostname --fqdn`'"@' /etc/apache2/conf.d/SOGo.conf
sed -i 's@^.*RequestHeader set "x-webobjects-server-url" ".*$@  RequestHeader set "x-webobjects-server-url" "https://'`hostname --fqdn`'"@' /etc/apache2/conf.d/SOGo.conf
# FIXME: This seems to work, but we really should investigate the other
#        options some more, and document here.

# The SOGo Apache configuration uses Apache's rewrite module
a2enmod rewrite headers ssl
a2ensite default-ssl

/etc/init.d/sogo restart
/etc/init.d/apache2 restart

echo ",------------------------------------------------------------------------------"
echo "| SOGo SHOULD be running, although the default config might not be correct."
echo "| Check config /home/sogo/GNUstep/Defaults/.GNUstepDefaults...  instructions"
echo "| on how to do this are on the SOGo website."
echo "|" 
echo "| After any config changes restart apache and start SOGo :"
echo "| /etc/init.d/apache2 restart"
echo "| /etc/init.d/sogo restart"
echo "| The SOGo site will be at :"
echo "| https://"`hostname --fqdn`"/SOGo"
echo "\`-----------------------------------------------------------------------------"


