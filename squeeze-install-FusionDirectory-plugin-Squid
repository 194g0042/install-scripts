#!/bin/sh
# A script to install the GOsa Squid plugin and required softare.
# FIXME: This script is incomplete, probably incorrect and not working.

# We must run this script as root...
if [ "$USER" != "root" ]; then
        echo "Must be root to execute script..."
        exit 1
fi

# ...and check if we've installed GOsa via the squeeze-install-FusionDirectory script
if [ ! -f /etc/gosa/gosa.conf ]; then
  echo "Run the squeeze-install-FusionDirectory script before this one.  It must be"
  echo "installed and configured before we can continue..."
  exit 1
fi

# Squid requires a valid network IP...
my_fqdn=`hostname -f`
my_host_ip=`grep $my_fqdn /etc/hosts | awk '{ print $1 }'`
echo ""
echo "Your hostname is "$my_fqdn" and your IP is "$my_host_ip
if [ "$my_host_ip" = "127.0.1.1" ] || [ "$my_host_ip" = "127.0.0.1" ]; then
	echo ""
	echo "Squid requires your hostname to resolve to a valid network IP."
	echo "You must edit your /etc/hosts file and make sure your hostname"
	echo "(printed above) resolves to an IP other than 127.x.x.x"
	echo "Your /etc/networking/interfaces will also need to match. eg. :"
	echo "iface eth0 inet static"
	echo "    address 192.168.1.120"
	echo "    netmask 255.255.255.0"
	echo "    gateway 192.168.1.1" 
	exit 1
fi

# Install required software
# FIXME: Squid v2.7 will be installed...  if we want v.3.0 we need to install
#        squid3. At the time of writing only the first version of v3.0 is in
#        Squeeze even though many bugfixes have been submitted since this
#        version.  Perhaps later we can install a 3.0 version that's more
#        stable and up-to-date.
aptitude update
aptitude -y --allow-untrusted install squid fusiondirectory-plugin-connectivity fusiondirectory-plugin-squid libnet-ldap-perl libio-socket-ssl-perl sudo

# There is a free blacklist for Squid filtering hosted here :
# http://squidguard.mesd.k12.or.us/blacklists.tgz .  Commercial ones can also
# be found online.  Apparently the free blacklist is a combination of two other
# blacklists - one at a french site and another at a german site.  You can help
# maintain these free blacklists by using their URL submission forms :
# http://cri.univ-tlse1.fr/documentations/cache/squidguard_en.html#contrib
# http://www.shallalist.de/


# Set up Squids LDAP authentication and filtering.  This requires five steps :
# 1) Get some required configuration options from cn=config and fusiondirectory.conf
LDAP_BASE_DN=`ldapsearch -Y EXTERNAL -H ldapi:/// -b cn=config olcSuffix | grep ^olcSuffix | awk '/ */{ print $2 }'`
LDAP_ADMIN_DN=`grep 'adminDn="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{ print $2 }'`
LDAP_ADMIN_PW=`grep 'adminPassword="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{print $2 }'`

# 2) Add the ldap_auth helper program to squids configuration.
# FIXME: Does this work?  Requires testing...
sed -i "s@#auth_param basic program <uncomment.*@auth_param basic program "\
"/usr/lib/squid/ldap_auth -b ou=people,$LDAP_BASE_DN -v 3 "\
"-f (\&(objectclass=gosaProxyAccount)(uid=%s)) "\
"-D $LDAP_ADMIN_DN -w $LDAP_ADMIN_PW -H ldaps://$my_fqdn:636\n"\
"acl ldap-auth proxy_auth REQUIRED@" /etc/squid/squid.conf
sed -i "s@^http_access allow localhost@http_access allow ldap-auth@" /etc/squid/squid.conf

# ...to load the new config into squid :
/etc/init.d/squid restart

# You can test Squids LDAP authentication by manually executing ldap_auth from
# the commandline.  eg. :
# /usr/lib/squid/ldap_auth -b ou=people,dc=example,dc=com -v 3 \
#       -H ldaps://localhost:636 -f "(&(objectclass=gosaAccount)(uid=%s))" \
#	-D cn=admin,dc=example,dc=com -w <admin-password>
# There will be no output, just a flashing cursor. Enter valid
# <username> <password> pairs at the prompt.
# The answer will be "OK" or "Err", or perhaps "Success ERR", the last meaning
# a successful connection was made to LDAP, but auth failed with the username
# and password given.  Ctrl-D will end the session. Add -d to enable debug
# mode.  -h as an argument to ldap_auth will list all valid options.
#
# If you want to do more generic squid debugging you might want to look at
# uncommenting debug_options in squid.conf and setting it to maximum verbosity
# ie. ALL,9

# 3) If the user requests it, set up a cron job to download the free blacklist,
#    then run it so Squid has some fodder for its filtering.
# http://squidguard.mesd.k12.or.us/blacklists.tgz
# FIXME: Where's the code???  ;)  Below is the beginnings... Remove this once tested :
apt-get install wget
cat > /etc/cron.daily/squid-blacklist <<-EOF
	#!/bin/sh
	cd /var/spool/squid
	rm -R blacklists
	rm blacklists.tgz
	wget http://squidguard.mesd.k12.or.us/blacklists.tgz
	gunzip < blacklists.tgz | tar xvf -
	cat blacklists/porn/domains > domains.txt
	cat blacklists/spyware/domains >> domains.txt
	rm domains.db
	echo "Converting domain text list to db format.  This will take some time..."
	perl /usr/share/doc/fusiondirectory-plugin-squid/contrib/mkHash.pl domains.txt
	chown proxy.proxy /var/spool/squid/domains.db
EOF
# FIXME: Are these the right permissions?  I just used the same as existing scripts.
chmod 755 /etc/cron.daily/squid-blacklist
# FIXME: Will this script run daily???
echo ""
echo "We must download and convert an up-to-date proxy filter blacklist to"
echo "db format every day.  We're running an update now - please wait..." 
sh /etc/cron.daily/squid-blacklist

# 4) Add the blacklist configuration to Squids configuration.
cp /usr/share/doc/fusiondirectory-plugin-squid/contrib/goSquid.pl /usr/local/sbin/goSquid.pl
# FIXME: Are these the right permissions?
chown root.proxy /usr/local/sbin/goSquid.pl
chmod 770 /usr/local/sbin/goSquid.pl
echo "redirect_program /usr/local/sbin/goSquid.pl" >> /etc/squid/squid.conf

# 5) Set up a cron job to run every 5 mins to update quota info
zcat /usr/share/doc/fusiondirectory-plugin-squid/contrib/goQuota.pl.gz > /usr/local/sbin/goQuota.pl
# FIXME: The following sed commands are untested as yet...  test, then remove this
sed -i 's@LDAP_HOST = "localhost"@LDAP_HOST = "ldaps://localhost"@' /usr/local/sbin/goQuota.pl
sed -i 's@LDAP_PORT = "389"@LDAP_PORT = "636"@' /usr/local/sbin/goQuota.pl
sed -i 's@LDAP_BASE = "ou=People,dc=example,dc=com"@LDAP_BASE = "ou=people,'$LDAP_BASE_DN'"@' /usr/local/sbin/goQuota.pl
chmod 770 /usr/local/sbin/goQuota.pl
chown root.proxy /usr/local/sbin/goQuota.pl
cp /usr/share/doc/fusiondirectory-plugin-squid/contrib/goQuotaView.pl /usr/local/sbin/
chmod 770 /usr/local/sbin/goQuotaView.pl
chown root.proxy /usr/local/sbin/goQuotaView.pl

# Update Fusion Directory's interface...
update-fusion

echo "Updating proxy quota information..."
sudo -u proxy perl /usr/local/sbin/goQuota.pl
echo "*/5 * * * * proxy /usr/local/sbin/goQuota.pl" >> /etc/crontab
echo "!!!PLEASE NOTE!!!"
echo "The goQuota.pl script is buggy and gives nasty error messages.  I THINK these"
echo "are safe to ignore."
echo ""
echo "Squid is controlled from 'User administration'.  In a users 'Connectivity'"
echo "tab put a check-mark beside 'Proxy account' to enable squid access.  Various"
echo "proxy options can be controlled from here."
