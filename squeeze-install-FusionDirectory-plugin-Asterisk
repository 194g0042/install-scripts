#!/bin/sh
# A script to install the Fusion Directory Asterisk plugin and required softare
# FIXME: This script is incomplete, probably incorrect and not working.

# We must run this script as root
if [ "$USER" != "root" ]; then
        echo "Must be root to execute script..."
        exit 1
fi

# FIXME: prerequisite scripts (we should test these have run :
# squeeze-install-FusionDirectory
if [ ! -f /etc/fusiondirectory/fusiondirectory.conf ]; then
  echo "Run the squeeze-install-FusionDirectory script before this one."
  echo "Fusion Directory must be installed and configured before we can"
  echo "continue..."
  exit 1
fi

# Asterisk requires a valid network IP...
my_fqdn=`hostname -f`
my_host_ip=`grep $my_fqdn /etc/hosts | awk '{ print $1 }'`
echo ""
echo "Your hostname is "$my_fqdn" and your IP is "$my_host_ip
if [ "$my_host_ip" = "127.0.1.1" ] || [ "$my_host_ip" = "127.0.0.1" ]; then
	echo ""
	echo "Asterisk requires your hostname to resolve to a valid network IP."
	echo "You must edit your /etc/hosts file and make sure your hostname"
	echo "(printed above) resolves to an IP other than 127.x.x.x"
	echo "Your /etc/networking/interfaces will also need to match. eg. :"
	echo "iface eth0 inet static"
	echo "    address 192.168.1.120"
	echo "    netmask 255.255.255.0"
	echo "    gateway 192.168.1.1" 
	exit 1
fi

# gofon is the Asterisk plugin
aptitude install -y --allow-untrusted mysql-server asterisk dahdi-source module-assistant libmyodbc asterisk-mysql asterisk-sounds-main asterisk-sounds-extra fusiondirectory-plugin-gofon
# does asterisk_cdr need to be installed too?

# We want to allow connections from addresses other than 127.0.0.1, so we
# comment out the bind-address config option in /etc/mysql/my.cnf causing mysql
# to default to  binding to ALL interfaces.  If you may want to configure this
# option to be more restrictive.
sed -i "s@^bind-address.*= 127.0.0.1@#bind-address           = 127.0.0.1@" /etc/mysql/my.cnf

# We can build modules for Asterisk to reduct sound glitches, and to control certain
# hardware devices.  Dahdi is the new name for these modules...  they were
# previously known as the Zaptel kernel modules.
# FIXME: Is this build steps even required?  Are binary modules already included?
# m-a prepare
# m-a a-i dahdi
# m-a install dahdi
# FIXME: Should we modprobe the dahdi module/s?
# modprobe dahdi


echo ""
echo "Please enter a password for your Asterisk database user :"
read asterisk_password
echo ""
echo "Now we create the Asterisk database.  You will be prompted for your MySQL root p/w."
# Fusion Directory controls Asterisk via a MySQL database
# FIXME: can this be done instead via Postgres?  How??
echo "create database gophone;
use gophone;

create table cdr (
  calldate datetime NOT NULL default '0000-00-00 00:00:00',
  clid varchar(80) NOT NULL default '',
  src varchar(80) NOT NULL default '',
  dst varchar(80) NOT NULL default '',
  dcontext varchar(80) NOT NULL default '',
  channel varchar(80) NOT NULL default '',
  dstchannel varchar(80) NOT NULL default '',
  lastapp varchar(80) NOT NULL default '',
  lastdata varchar(80) NOT NULL default '',
  duration integer NOT NULL default '0',
  billsec integer NOT NULL default '0',
  disposition varchar(45) NOT NULL default '',
  amaflags integer NOT NULL default '0',
  accountcode varchar(20) NOT NULL default '',
  uniqueid varchar(32) NOT NULL default '',
  userfield varchar(255) NOT NULL default ''
) ENGINE=InnoDB DEFAULT CHARSET=latin1;


CREATE TABLE voicemail_users (
 uniqueid int(11) NOT NULL auto_increment,
 customer_id varchar(11) NOT NULL default '0',
 context varchar(50) NOT NULL default '',
 mailbox varchar(11) NOT NULL default '0',
 password varchar(5) NOT NULL default '0',
 fullname varchar(150) NOT NULL default '',
 email varchar(50) NOT NULL default '',
 pager varchar(50) NOT NULL default '',
 tz varchar(10) NOT NULL default 'central',
 attach varchar(4) NOT NULL default 'yes',
 saycid varchar(4) NOT NULL default 'yes',
 dialout varchar(10) NOT NULL default '',
 callback varchar(10) NOT NULL default '',
 review varchar(4) NOT NULL default 'no',
 operator varchar(4) NOT NULL default 'no',
 envelope varchar(4) NOT NULL default 'no',
 sayduration varchar(4) NOT NULL default 'no',
 saydurationm tinyint(4) NOT NULL default '1',
 sendvoicemail varchar(4) NOT NULL default 'no',
 \`delete\` varchar(4) NOT NULL default 'no',
 nextaftercmd varchar(4) NOT NULL default 'yes',
 forcename varchar(4) NOT NULL default 'no',
 forcegreetings varchar(4) NOT NULL default 'no',
 hidefromdir varchar(4) NOT NULL default 'yes',
 stamp timestamp NOT NULL default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
 PRIMARY KEY  (uniqueid),
 KEY mailbox_context (mailbox,context)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ;

CREATE TABLE sip_users (
 id int(11) NOT NULL auto_increment,
 name varchar(80) NOT NULL default '',
 host varchar(31) NOT NULL default '',
 nat varchar(5) NOT NULL default 'no',
 type enum('user','peer','friend') NOT NULL default 'friend',
 accountcode varchar(20) default NULL,
 amaflags varchar(13) default NULL,
 callgroup varchar(10) default NULL,
 callerid varchar(80) default NULL,
 cancallforward char(3) default 'yes',
 canreinvite char(3) default 'yes',
 context varchar(80) default NULL,
 defaultip varchar(15) default NULL,
 dtmfmode varchar(7) default NULL,
 fromuser varchar(80) default NULL,
 fromdomain varchar(80) default NULL,
 insecure varchar(4) default NULL,
 language char(2) default NULL,
 mailbox varchar(50) default NULL,
 md5secret varchar(80) default NULL,
 deny varchar(95) default NULL,
 permit varchar(95) default NULL,
 mask varchar(95) default NULL,
 musiconhold varchar(100) default NULL,
 pickupgroup varchar(10) default NULL,
 qualify char(3) default NULL,
 regexten varchar(80) default NULL,
 restrictcid char(3) default NULL,
 rtptimeout char(3) default NULL,
 rtpholdtimeout char(3) default NULL,
 secret varchar(80) default NULL,
 setvar varchar(100) default NULL,
 disallow varchar(100) default 'all',
 allow varchar(100) default 'g729;ilbc;gsm;ulaw;alaw',
 fullcontact varchar(80) NOT NULL default '',
 ipaddr varchar(15) NOT NULL default '',
 port smallint(5) unsigned NOT NULL default '0',
 regserver varchar(100) default NULL,
 regseconds int(11) NOT NULL default '0',
 username varchar(80) NOT NULL default '',
 PRIMARY KEY  (id),
 UNIQUE KEY name (name),
 KEY name_2 (name)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC; 

CREATE TABLE \`extensions\` (
 \`id\` int(11) NOT NULL auto_increment,
 \`context\` varchar(20) NOT NULL default '',
 \`exten\` varchar(20) NOT NULL default '',
 \`priority\` tinyint(4) NOT NULL default '0',
 \`app\` varchar(20) NOT NULL default '',
 \`appdata\` varchar(128) NOT NULL default '',
 PRIMARY KEY  (\`context\`,\`exten\`,\`priority\`),
 KEY \`id\` (\`id\`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1; 


CREATE TABLE queues (
 name VARCHAR(128) PRIMARY KEY,
 musiconhold VARCHAR(128),
 announce VARCHAR(128),
 context VARCHAR(128),
 timeout INT(11),
 monitor_join BOOL,
 monitor_format VARCHAR(128),
 queue_youarenext VARCHAR(128),
 queue_thereare VARCHAR(128),
 queue_callswaiting VARCHAR(128),
 queue_holdtime VARCHAR(128),
 queue_minutes VARCHAR(128),
 queue_seconds VARCHAR(128),
 queue_lessthan VARCHAR(128),
 queue_thankyou VARCHAR(128),
 queue_reporthold VARCHAR(128),
 announce_frequency INT(11),
 announce_round_seconds INT(11),
 announce_holdtime VARCHAR(128),
 retry INT(11),
 wrapuptime INT(11),
 maxlen INT(11),
 servicelevel INT(11),
 strategy VARCHAR(128),
 joinempty VARCHAR(128),
 leavewhenempty VARCHAR(128),
 eventmemberstatus BOOL,
 eventwhencalled BOOL,
 reportholdtime BOOL,
 memberdelay INT(11),
 weight INT(11),
 timeoutrestart BOOL,
 periodic_announce VARCHAR(50),
 periodic_announce_frequency INT(11)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

CREATE TABLE queue_members (
 uniqueid INT(10) UNSIGNED PRIMARY KEY AUTO_INCREMENT,
 membername varchar(40),
 queue_name varchar(128),
 interface varchar(128),
 penalty INT(11),
 paused BOOL,
 UNIQUE KEY queue_interface (queue_name, interface)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

GRANT INSERT,SELECT,DELETE,UPDATE ON gophone.* TO asterisk@'%' IDENTIFIED BY '$asterisk_password';" | mysql --password


# FIXME: We need to explain more of what's going on...  >>I<< certainly
#        don't know yet.  :)
# FIXME: Do we need to edit file permissions???

# Configuring ODBC
cp /usr/share/libmyodbc/odbcinst.ini /etc/odbcinst.ini
# FIXME: Do we need to insert the password in the following?
cat > /etc/odbc.ini <<-EOF
	[ODBC Data Sources]
	asterisk= Asterisk
	
	[asterisk]
	Driver       = MySQL
	Description  = Asterisk
	Server       = `hostname --fqdn`
	;Port         =
	User         = asterisk
	;Password     =
	Database     = gophone
	Option       = 3
	Socket       =
EOF

# Register ODBC in Asterisk
cat >> /etc/asterisk/res_odbc.conf <<-EOF
	
	[gosa_asterisk]
	enabled => yes
	dsn => asterisk
	username => asterisk
	password => $asterisk_password
	pre-connect => yes
EOF

# Activate realtime
cat >> /etc/asterisk/extconfig.conf <<-EOF
	
	sipusers => odbc,gosa_asterisk,sip_users
	sippeers => odbc,gosa_asterisk,sip_users
	voicemail => odbc,gosa_asterisk,voicemail_users
	extensions => odbc,gosa_asterisk,extensions
	queues => odbc,gosa_asterisk,queues
	queue_members => odbc,gosa_asterisk,queue_members
EOF

# Connecting CDR
# FIXME: The destination file for this config wasn't specified.  Is this correct?
cat >> /etc/asterisk/cdr_odbc.conf <<-EOF
	
	[global]
	dsn=Asterisk
	username=asterisk
	password=$asterisk_password
EOF

# In /etc/asterisk/extensions.conf, in the [default] context, add : 
# switch => Realtime/GOsa@extensions
# FIXME: Should we leave the "include => demo" in here???
sed -i 's#include => demo#include => demo\
switch => Realtime/GOsa@extensions#' /etc/asterisk/extensions.conf

# Change /etc/default/asterisk to include
# RUNASTERISK=yes
sed -i 's@#RUNASTERISK=no@RUNASTERISK=yes@' /etc/default/asterisk
# then :
/etc/init.d/asterisk restart

# I seemed to need to do this to get the Asterisk options to show up...
fusiondirectory-setup --update-cache --update-locales

# To debug execute asterisk from the commandline :
# asterisk -U asterisk -vvvgc 
# CTRL-C exits
# To debug MySQL access from FusionDirectory (which is required by the Astersk
# plugin):
# debugLevel = 4
# (in fusiondirectory.conf).

echo "Configuring Fusion Directory for use with Asterisk:"
echo "On the web server, go to the mysql server object (systems),"
echo "database tab. Fill Asterisk administration params (database connection"
echo "parameters)"
echo "Asterisk DB user: asterisk"
echo "Password: <the password you entered earlier>"


