#!/bin/bash
# Shell script to install FAI managed by Fusion Directory
# FIXME: Not quite working
if [ "$USER" != "root" ]; then
        echo "Must be root to execute script..."
        exit 1
fi

# FIXME: prerequisite scripts (we should test these have run :
# squeeze-install-FusionDirectory
if [ ! -f /etc/fusiondirectory/fusiondirectory.conf ]; then
  echo "Run the squeeze-install-FusionDirectory script.  Fusion Directory must be"
  echo "installed and configured before we can continue..."
  exit 1
fi
# squeeze-install-FusionDirectory-plugin-DHCP
if [ ! -f /etc/dhcp/dhcpd.conf ]; then
  echo "Run the squeeze-install-FusionDirectory-plugin-DHCP script.  DHCPd"
  echo "must be installed and configured before we can continue..."
  exit 1
fi
# squeeze-install-FusionDirectory-plugin-DNS
if [ ! -f /etc/default/ldap2zone ]; then
  echo "Run the squeeze-install-FusionDirectory-plugin-DNS script.  Bind9"
  echo "must be installed and configured before we can continue..."
  exit 1
fi
# squeeze-install-FusionDirectory-Server-Infrastructure
if [ ! -f /etc/gosa-si/server.conf ]; then
  echo "Run the squeeze-install-FusionDirectory-Server-Infrastructure script."
  echo "GOsa-SI must be installed and configured before we can continue."
  exit 1
fi

echo ""
echo "WARNING!!!  You will need to put an apt repository in /var/www/debian"
echo "This script will try to do this for you, but a repo is more than 30"
echo "gigabytes and will take eg. 3 days on a 1.5mb connection.  You may want"
echo "to do this by hand BEFORE running this script.  Hit Ctrl-C to quit, or"
echo "<enter> to continue anyway..."
read dummy_val
## FIXME: This should only be required temporarily ie. until the
## latest FAI makes it into the main Squeeze repository.
## There should be a --keyserver directive to a gpg server in this command.
## 1) Add the required key for the FAI repo
#gpg -a --keyserver hkp://keyring.debian.org --recv-keys AB9B66FD; gpg -a --export AB9B66FD | apt-key add -
## 2) Add the FAI repo to our sources.list if required.
#grep -q "http://www.informatik.uni-koeln.de" /etc/apt/sources.list
#if [ "$?" != 0 ]; then
#        echo "deb http://www.informatik.uni-koeln.de/fai/download lenny koeln" >> /etc/apt/sources.list
#fi
#
#echo "Downloading package lists...  This may take a while..."
#if apt-get -qq update; then
#        echo "Success!"
#else	
#        echo "Failure to download package information.  Exiting..."
#        exit 1
#fi
#
echo "First we install required packages..."

# *** This is info on needed packages I've found online ***
#        I've marked several packages below with a "!".  These are
#        the ones I've installed explicitly. "+" - already installed or
#        perhaps pulled in as dependancies. The mirror related stuff
#        (goto-fai-backend etc...) isn't installed.
########################################################################
# !libgosa-perl (in gosa-perl dir) - build
# !goto-common - build from the goto sources
# !recode
# !goto-fai - build from the goto sources ~ Integrate Fusion Directory and GOto
#             into FAI chroot
# fai-backend ~ (Several scripts and daemons to control FAI
#                            from Fusion Directory)
# fai-kernels - Obsolete and doesn't exist???
# use debmirror or dak?  Perhaps choice between large/small.
# goto-fai-progress = progress bar - this goes on clients?
# apt-move - Maintain Debian packages in a package pool
# !fai-server - FAI server package ~
# +genisoimage - Creates ISO-9660 CD-ROM filesystem images
# +nfs-kernel-server - Support for NFS kernel server
# !openbsd-inetd - The OpenBSD Internet Superserver
# !syslinux-common - Kernel loader which uses a FAT, ext2/3 or iso9660
# filesystem or PXE network
# !fai-client - (optional on server) : use if dirinstall is required.
# (apparently fai-client is NOT optional on server now...  or perhaps
# it's just "recommended".  In any case apt pulls it in.
# +gosa-plugin-goto : GOto desktop management plugin :
# FIXME: How does GOto manage desktops?

# FIXME: Just removed goto-fai-progress because of problems with current distributed version
#	 For the moment I check it out of trunk further down.
# FIXME: Need to check the below packages to see if all are still required.
#        (Things have evolved quite quickly in this package).
if apt-get install -y --allow-unauthenticated debian-keyring fusiondirectory-plugin-fai fusiondirectory-plugin-fai-schema nfs-kernel-server fai-server syslinux libnet-libidn-perl libio-socket-ssl-perl libnet-ssleay-perl recode libnet-ldap-perl libconvert-asn1-perl hwinfo libhd16 ntp console-tools console-common console-data libconsole fts fts-fai-ldap atftpd liblog-agent-perl liblockfile-simple-perl rsync debmirror; then
	echo "Installation of FAI prerequisite packages successful..."
else
	echo "Installation failed for FAI prerequisite packages.  Exiting..."
	exit 1
fi

echo "Checking if prerequisite packages are already present :"
if apt-get -qq --allow-unauthenticated install libgosa-perl; then
  echo "Installed libgosa-perl from repositories..."
else
  cd /usr/src
  svn co https://oss.gonicus.de/repositories/goto/trunk/gosa-perl gosa-perl
  cd /usr/src/gosa-perl
  dpkg-buildpackage -b
  cd /usr/src
  dpkg -i libgosa-perl_*.deb
fi

if apt-get -qq --allow-unauthenticated install goto-common; then
  echo "Installed goto-common from repositories..."
else
  cd /usr/src
  svn co https://oss.gonicus.de/repositories/goto/trunk/goto-common goto-common
  cd /usr/src/goto-common
  dpkg-buildpackage -b
  cd /usr/src
  dpkg -i goto-common_*.deb
fi

if apt-get -qq --allow-unauthenticated install goto-fai; then
  echo "Installed goto-fai from repositories..."
else
  cd /usr/src
  svn co https://oss.gonicus.de/repositories/goto/trunk/goto-fai goto-fai
  cd /usr/src/goto-fai
  dpkg-buildpackage -b
  cd /usr/src
  dpkg -i goto-fai_*.deb
fi

# FIXME: I'm compiling this package because at the moment there's
#        a fix that's only in trunk.  Erase this when fixed.
  cd /usr/src
  svn co https://oss.gonicus.de/repositories/goto/trunk/goto-fai-progress goto-fai-progress
  cd /usr/src/goto-fai-progress
  dpkg-buildpackage -b
  cd /usr/src
  dpkg -i goto-fai-progress_*.deb

  # Fix up packages that got held up due to problems
  apt-get -f -y install
################## END FIXME #######################

#### No longer required? ##########################
## ...requred packages for tftp...
#
#apt-get -qq install libproc-daemon-perl libconfig-inifiles-perl
#
#if apt-get -qq --allow-unauthenticated install ctftpd ctftpd-fai-ldap; then
#  echo "Installed ctftpd from repositories..."
#else
#  # tftpd-hpa is installed by default with FAI, but we are using Fusion Directory,
#  # and we therefore we must remove this package and use ctftpd instead.
#  apt-get -qq purge tftpd-hpa
#  cd /usr/src
#  svn co https://oss.gonicus.de/repositories/goto/trunk/ctftpd ctftpd
#  cd /usr/src/ctftpd
#  dpkg-buildpackage -b
#  cd /usr/src
#  dpkg -i ctftpd_*.deb
#  dpkg -i ctftpd-fai-ldap_*.deb
#fi
#####################################################

## FIXME: Perhaps we should optionally install an APT mirror. NOTE:
##        the goto-fai-backend package is required in this case.
##	  I don't know how to get a "release" and "section" selection to appear
##        in "Software Deployment".  See the FIXME note near the end of this script.
apt-get --allow-unauthenticated -qq install debmirror liblockfile-simple-perl liblog-agent-perl rsync libfuse-perl libfile-pid-perl libclass-accessor-perl libsub-name-perl

if apt-get --allow-unauthenticated -qq install fts; then
  echo "Installed fts from repositories..."
else
  cd /usr/src
  svn co https://oss.gonicus.de/repositories/goto/trunk/fts fts
  cd /usr/src/fts
  dpkg-buildpackage -b
  cd /usr/src
  dpkg -i fts_*.deb
fi

if apt-get --allow-unauthenticated -qq install goto-fai-backend; then
  echo "Installed goto-fai-backend from repositories..."
else
  cd /usr/src
  svn co https://oss.gonicus.de/repositories/goto/trunk/goto-fai-backend goto-fai-backend
  cd /usr/src/goto-fai-backend
  dpkg-buildpackage -b
  cd /usr/src
  dpkg -i goto-fai-backend_*.deb
fi

if [ -f /etc/ldap/schema/fusiondirectory/fai.ldif ]; then
	echo "Adding schemas to LDAP tree..."
else
	echo "Hopefully ldif versions of schemas will be packaged soon,"
	echo "but until this happens you will need to create these by hand."
	echo "You could use slaptest, or the schema2bcldif.sh script."
	echo "Please create ldif versions of all schemas in"
	echo "/etc/ldap/schema/fusiondirectory and hit <enter> to continue..."
	read dummy
fi
ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/ldap/schema/fusiondirectory/fai.ldif
# FIXME: Should any indexes be added here?
/etc/init.d/slapd stop
sudo -u openldap slapindex
/etc/init.d/slapd start

/etc/init.d/gosa-si-server start
/etc/init.d/gosa-si-client start

fusiondirectory-setup --update-cache --update-locales

echo ""
echo "When installing FAI clients speed is critical, therefore you almost"
echo "certainly need a Debian mirror on your local network.  Fusion Directory"
echo "stores information on repositories using 'repository service' objects,"
echo "and this information is used by gosa-si to build/maintain your local"
echo "repository.  IMPORTANT!!! - Complete the following steps:"
echo "1) create a server object to represent an Internet apt mirror you want"
echo "   as your package source (eg. ftp.debian.org).  Then, inside this server"
echo "   object create a 'Repository service'."
echo "   Some example configuration values for a 'release':"
echo "   Release: squeeze"
echo "   URL: <the URL of your chosen source repository>"
echo "   Sections: main (you may want 'contrib' and 'non-free' in here also)"
echo "   Leave 'Parent server' blank"
echo "2) On the server object representing THIS machine : create a repository"
echo "   service with the external server as its parent. Populate 'Release'"
echo "   and 'Sections' as above, and a valid URL for this machine ie.:"
echo "   http://"`hostname --fqdn`"/debian"
echo "After you have made these changes an APT repository will be built using"
echo "this information.  This process will take a LONG time (if you haven't"
echo "already pre-populated /var/www/debian) as it requires over 30gb to download"
echo "from the Internet to /var/www/debian.  Be sure you have sufficient space!"
echo "<hit enter to continue>"
read dummy_value

# We next generate a configuration for the debmirror tool, and a cron job to
# run debmirror.  Both these tasks are achieved using goto's ldap2repository.
# Below we read your servers default interface.  This is used by
# ldap2repository to look up your servers mac address, and this in turn helps
# the script look up the LDAP record for this server which contains the
# repository information entered into LDAP just before.
echo ""
echo "What's your servers default interface [eth0]:"
read net_interface
if [ "$net_interface" = "" ]; then
    echo "Defaulting to -i eth0"
    net_interface="eth0"
fi
ldap2repository -r /var/www -p -v -i $net_interface

## FIXME: There is a cronjob /etc/cron.d/goto-fai-backend that runs ldap2repository
##        daily and on reboot.  This must also call ldap2repository with the switches
##        we used above.  Should we instead configure this elsewhere?
# NOTE: I've removed the -n switch which means obsolete packages get deleted
#       from the repository.  This makes the repo smaller, but could cause
#       problems if a client tries to install a recently deleted package.
sed -i 's@ldap2repository -n -p@ldap2repository -r /var/www -p -i $net_interface@' /etc/cron.d/goto-fai-backend

# We also need an Apache configuration to make this repository accessible.
cat > /etc/apache2/sites-available/debmirror <<-EOF
	# Include Fusion Directory to your web service
	Alias /debian /var/www/debian
	
	<Location /debian>
	Options Indexes FollowSymLinks
	Order allow,deny
	Allow from all
	</Location>
EOF

a2ensite debmirror

# FIXME: Should we allow manual configuration of architecture here?
sed -i 's@^\[Server\]$@\[Server\]\
repo-path = /var/www/debian\
#debian-arch = i386@' /etc/gosa-si/server.conf

## FIXME: The switch we passed to ldap2repository above should have made this
##        change already...  test.
#sed -i 's@/srv/www/debian@/var/www/debian@' /etc/fusiondirectory/fai/update-cronjob

# The debmirror command should verify our mirror
gpg --keyring /usr/share/keyrings/debian-archive-keyring.gpg --export \
 | gpg --no-default-keyring --keyring trustedkeys.gpg --import

# The cron script to create the mirror lives in /etc/fusiondirectory/fai/ .
# FIXME: Are default permissions OK for this file?
# !!!DOWNLOADING WILL PROBABLY TAKE A LOOOOOONG TIME IF YOU START FROM SCRATCH!!!
echo ""
echo "Do you want to update your repository now?  (If you want to do this later"
echo "you will need to execute : ldap2repository -r /var/www -p -n -v -i eth0)."
echo "Input y or n, then hit <enter> to continue..."
read repo_choice
if [ ! "$repo_choice" = "n" ]; then 
	sh /etc/fusiondirectory/fai/update-cronjob
fi

# By default gosa-si will look for the repo in /srv/www/debian .
# In /etc/gosa-si/server.conf you can add/change this value under [server] eg.
# repo-path = /var/www/debian
# debian-arch = i386

# After installing these packages a number of different Fusion Directory
# services can be added to server objects.  GOto is the general client
# management framework and enables lots of additional things in the Fusion
# Directory interface.  In addition to FAI it can manage thin clients, desktops
# and servers.
# NOTE: The Linux desktop side of the goto agents is oriented towards KDE.

# The following services will now be available :
# --------------------------------
# File service (Shares)
# Kiosk profile service
# LDAP service - required or FAI
# Print service
# Repository service - required for FAI
# Syslog server
# Syslog service database
# Terminal service
# Time service (NTP) - required for FAI
# --------------------------------
# ::There are also several new icons.
# : In "My account" :
# Environment
# : In "Administration" :
# Applications
# Mime types
# Hotplug devices
# Software deployment
# : In "Addons" :
# Deployment Status

## FIXME: Is there a better place to put configurations than under /srv?
# Edit [FAI] section and [LDAP] sections in /etc/fts/fts.conf
sed -i 's@#\[FAI\]@\[FAI\]@' /etc/fts/fts.conf
# FIXME: The following doc doesn't seem to work.  Why?
# To debug FAI you can add "createvt" and "sshd" to fai_flags.  This will
# allow sshing to the client during installation, and creation of an
# interactive virtual terminal.  See fai-chboot for documentation on other
# flags.
sed -i 's@#fai_flags=verbose,syslogd,reboot vga=0@fai_flags=verbose,syslogd,reboot vga=0@' /etc/fts/fts.conf
sed -i 's@#nfs_opts=@nfs_opts=@' /etc/fts/fts.conf
sed -i 's@#nfs_root=/srv/fai/nfsroot@nfs_root=/srv/fai/nfsroot@' /etc/fts/fts.conf
sed -i 's@#union=aufs@union=aufs@' /etc/fts/fts.conf

# ...and in the [LDAP] section :
# FIXME: What auth_dn do we need to set here, and do we need to
# modify the fts.conf file permissions for security purposes.
# I THINK this is set only if auths are required for LDAP connections(???)
# Benoit sets this to the LDAP admin user/pass, so that's what I've done.
# We first get our admin dn and password from fusiondirectory.conf (these vars
# are also used later in the script) :
LDAP_ADMIN_DN=`grep 'adminDn="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{ print $2 }' #| awk -F',' '{ print $1 }'`
echo "LDAP admin dn extracted from /etc/fusiondirectory/fusiondirectory.conf"
LDAP_ADMIN_PW=`grep 'adminPassword="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{print $2 }'`
echo "LDAP admin password extracted from /etc/fusiondirectory/.conf"

# ...then configure our TFTPD server to bind to LDAP as admin.
sed -i 's@#auth_dn=@auth_dn='$LDAP_ADMIN_DN'@' /etc/fts/fts.conf
sed -i 's@#auth_pwd=@auth_pwd='$LDAP_ADMIN_PW'@' /etc/fts/fts.conf
# FIXME: At the moment fts looks at the wrong directory for tftp configuration.
#        Benoit will fix this.  Remove this when it's fixed.
# The FTS daemon creates a tftp configuration on the fly from LDAP.  It does
# this using the FUSE filesystem, so therefore when eg. atftpd asks for
# a configuration fts can check LDAP and populate a config if required.
sed -i 's@pxelinux_cfg=/srv/fai/boot/pxelinux.cfg@pxelinux_cfg=/srv/tftp/fai/pxelinux.cfg@' /etc/fts/fts.conf
sed -i 's@pxelinux_cfg=/srv/fai/boot/pxelinux.static@pxelinux_cfg=/srv/tftp/fai/pxelinux.static@' /etc/fts/fts.conf

# We now edit /etc/fai/make-fai-nfsroot.conf and change some variables :
#-----------------------------------------------------------
# FAI_DEBOOTSTRAP - name of Debian distro and repo we want our NFSROOT to be
#                   built from.

# When our clients netboot they need to know where to pull their packages from
sed -i 's@FAI_DEBOOTSTRAP=".*"@FAI_DEBOOTSTRAP="squeeze http://'`hostname --fqdn`'/debian"@' /etc/fai/make-fai-nfsroot.conf
# We need make-fai-nfsroot to do some extra FusionDirectory-specific steps eg.
# copy configuration from LDAP etc...  A hook script to do this has been
# placed in /etc/fai/nfsroot-hooks, and we uncomment the NFSROOT_HOOKS
# option so make-fai-nfsroot will scan this directory for hook scripts.
sed -i 's@#NFSROOT_HOOKS=@NFSROOT_HOOKS=@' /etc/fai/make-fai-nfsroot.conf

## Another potentially useful make-fai-nfsroot options? :
# NFSROOT_ETC_HOSTS - This is /etc/hosts style entry/s containing host/s
# important for client machines eg. the Debian mirror, Beowulf master 
# node addrs etc...  This variable can contain multiple lines if required.
# The contents of this variable will be appended to the clients own
# /etc/hosts file.  This variable is particularly useful when no
# DNS is available.  We don't enable this variable by default, but 
# is useful enough that I've made a note here. Example entry :
# NFSROOT_ETC_HOSTS="192.168.1.1 debmirror debmirror.example.com"

# FAI_ROOTPW - This contains the encrypted root password all install
# clients will use during the installation process.  Used for ssh logins.
# We replace the FAI default of "fai" with a user-entered p/w.
# FIXME: I should find a better way of accepting a password.
echo ""
echo "Please enter a root password for use on FAI clients : "
read client_root_pw
sed -i "s@\$1\$.*\'@"`echo $client_root_pw | mkpasswd -Hmd5 -s`"'@" /etc/fai/make-fai-nfsroot.conf
#-------------------------------------------------------------

# make-fai-nfsroot needs to know where to install packages from.
# FIXME: Does this also get installed into the final /etc/apt/sources.list
#        for clients?
# FIXME: This repo should also have a local mirror!
# FIXME: At the moment I need a combination of TWO FusionDirectory repos.
#        Delete later and either make a local FusionDirectory repo, or some
#        other solution.
#        NOTE:: My local repo only has 'main', not 'contrib' or 'non-free'
#               Change this?
sed -i 's@deb http://.*/debian .*$@deb http://'`hostname --fqdn`'/debian squeeze main\
deb http://apt.fusiondirectory.org/debian/ squeeze main@' /etc/fai/apt/sources.list
# FIXME: Perhaps we should also cache the debian security website?
sed -i 's@deb http://.*/debian-security .*$@deb http://security.debian.org/ squeeze/updates main@' /etc/fai/apt/sources.list

# Write the secret file containing the admin dn and password :
# FIXME: What kind of permissions do we need to make our secrets file 
#        secure but still able to be accessed by relevant software?
echo $LDAP_ADMIN_DN':'$LDAP_ADMIN_PW > /etc/goto/secret
# FIXME: Which package requires this /etc/goto/secret file?  The
# /etc/goto dir is not available on the test install I have right now.
# Perhaps it's gosa-si related???

# /etc/fai/NFSROOT contains instructions for building the root filesystem the
# FAI client systems will use.  We've added the non-free Broadcom firmware
# to the list of packages to be installed. We also install a few extra Fusion
# Directory related packages which allow (for example) pulling FAI
# configuration from LDAP instead of an NFS filesystem on the server, and
# adding a FAI progress bar.
sed -i 's@liblinux-lvm-perl@liblinux-lvm-perl\
rsyslog dialog gawk bind9-host libpci2 ldap-utils\
vim psmisc debootstrap@' /etc/fai/NFSROOT
sed -i 's@# needed for the simple examples@# needed for the Fusion Directory goto integration@' /etc/fai/NFSROOT
sed -i 's@cfengine2 libapt-pkg-perl@goto-common reprepro goto-fai goto-fai-progress libdatetime-perl gosa-si-common gosa-si-client locales-all gettext\
\
# needed for non-free broadcom firmware\
firmware-bnx2@' /etc/fai/NFSROOT

SERVER_IP=`hostname --ip-address`

cat > /etc/gosa-si/client.conf.in <<-EOF
	[general]
	log-file = /var/log/gosa-si/gosa-si-client.log
	pid-file = /var/run/gosa-si/gosa-si-client.pid
	
	[client]
	ip = $SERVER_IP
	fai-logpath = .
	
	[server]
	key.
	@@SERVER@@
EOF

# FIXME: Unfortunately gosa-si-client isn't in any of the repos yet.
#        This is a temp fix...  remove when no longer required :
# We set up the gosa-si packages in a file-based repository in the new
# NFSROOT, and arrange a FAI hook script to add this repo and install
# the packages from it.
apt-get install -y --allow-unauthenticated reprepro
mkdir -p /etc/fai/packages/conf
cp /usr/src/gosa-si*.deb /etc/fai/packages
cat > /etc/fai/packages/conf/distributions <<-EOF
	Origin: Debian
	Label: Debian-All
	Suite: stable
	Codename: squeeze
	Version: 6.0
	Architectures: i386 amd64
	Components: main
	Description: Debian Squeeze
EOF
cd /etc/fai/packages
reprepro includedeb squeeze /etc/fai/packages/*.deb
echo "deb file:/etc/fai/packages squeeze main" >> /etc/fai/apt/sources.list
echo '$ROOTCMD apt-get update
$ROOTCMD apt-get --allow-unauthenticated -qq install gosa-si-common gosa-si-client' > /etc/fai/nfsroot-hooks/01-install-gosa-si-client

# Create fai NFSROOT.  Run with -v for verbose output.
# FIXME: The -U is a bug workaround. Without -U a buggy make-fai-nfsroot
# won't generate an initrd in Squeeze.  Testing...  remove this afterwards.
make-fai-nfsroot -v
# Log file written to /var/log/fai/make-fai-nfsroot.log

# We need to NFS-export filesystems required by FAI
# FIXME: I've read NFS filesystems should have their own partition for security.
#        Is this true?  If so warn user.
# FIXME: This manual process should perhaps be done another way.  Speak to Benoit.
echo ""
echo "After booting a kernel from the network via TFTP our FAI client machines"
echo "will try to mount both a root filesystem and FAI configuration via NFS."
echo "Please select which network/s these filesystems should be accessible from."
echo "1 - 192.168.1.0/255.255.255.0"
echo "2 - 10.0.0.0/255.255.255.0"
echo "3 - any network (ie. *)"
echo "...or you can type a network/mask pair manually:"
read NETWORK_CONFIG
if [ "$NETWORK_CONFIG" = "1" ]; then
    NETWORK_CONFIG="192.168.1.0/255.255.255.0"
elif [ "$NETWORK_CONFIG" = "2" ]; then
    NETWORK_CONFIG="10.0.0.0/255.255.255.0"
elif [ "$NETWORK_CONFIG" = "3" ]; then
    NETWORK_CONFIG="*"
fi
echo "/srv/fai/nfsroot "$NETWORK_CONFIG"(async,ro,no_subtree_check,root_squash)" >> /etc/exports
exportfs -a


# For the moment I'm copying the simple FAI configuration examples.
# FIXME: Perhaps put in something directly useful to Fusion Directory using
#        ldifs instead of generic examples from fai-doc.
apt-get install fai-doc

# FIXME : Should we place configurations in a better place than /srv?
# We need to enable clients to netboot via pxe/tftp
#cp /usr/lib/syslinux/pxelinux.0 /srv/tftp/

# FIXME: I presume this is if a mirror is enabled?
# Uncomment the following (and get rid of "disabled_") from fusiondirectory.conf
# from <location name="default" :
#              disabled_gosaSupportURI="gosa-si-secret@server:20081}"
#              disabled_gosaSupportTimeout="15"
# NOTE: This no longer seems required for later versions from 2.6.6
#
# ...get the gosa-si-secret password (in the URI above) from /etc/gosa-si/server.conf
#
# [GOsaPackages]
# enabled = true
# key = secret-gosa-password

# DAK = Debian Archive Kit
# http://packages.debian.org/source/unstable/dak (build dependancies)
#cd /usr/src
#wget http://ftp.de.debian.org/debian/pool/main/d/dak/dak_1.0-8.6.tar.gz
#tar -zxvf dak_1.0-8.6.tar.gz
#
# Perhaps we could use an apt-proxy (eg. Approx) instead of setting
# up a mirror like DAK where a full featured mirror isn't required?
#
# From the mailing list about enabling FAI :
#can you set the IP-Address of eth0 in the LDAP-Entry of your Server  
#(also the macaddress of that interface)? And make sure that the fqdn  
#of your host is resolvable via DNS.
#
# Edit the following variables in /etc/fai/make-fai-nfsroot.conf
# FAI_DEBOOTSTRAP
# 
#    For building the nfsroot there's the command called debootstrap(8).
# It needs the location of a Debian mirror and the name of the
# distribution (etch, lenny, sid) for which the basic Debian system
# should be built.
#
# NFSROOT_ETC_HOSTS
# 
#     If you use HTTP or FTP access to the Debain mirror, add its
# IP-address and the name to this variable. For a Beowulf master node,
# add the name and IP-address of both networks to it. This variable is
# not needed when the clients have access to a DNS server.

## FAI - Understanding Class Types :
# * Profile - groups of class names.  Doesn't work if you don't
#   already have classes
# * Partition table - sets up disk layout.  Requires gosa-si(?)
# * Scripts
# * Hooks
# * Variables
# * Templates
# * Package list

# Some notes on package lists, release and section names :
# gosa-si-server builds some database files from your debian mirror.
# in /var/lib/gosa-si :
# FIXME: at the moment only packages.db is being built. Bug? Setup problem??
# fai_release.db : contains a list of debian releases
# fai_server.db : This contains URLs for various debian server mirrors.
# packages.db : List of Debian package files
# 
# Some brief explanations from Benoit on the other files
# FIXME: These descriptions aren't really clear - fix.
# servers.db : is in a multi setup environment (???)
# client.db : is when clients appear and are managed by Fusion Directory
#             (Arphandler?)
# incoming.db : is for new clients
# foreign_clients.db : not used
#
#  To examine these *.db files install sqlite3 and :
# sqlite3 <filename.db> ".dump"
# ...will dump the contents of the given filename.
#
# You can FORCE a release to be listed by adding an ou eg. ou=squeeze
# under ou=fai,ou=configs,ou=systems,<base> and adding an objectClass
# of FAIbranch.
# FIXME: I'm forcing things right now, and I probably shouldn't be.  FIX!

LDAP_BASE_DN=`ldapsearch -Y EXTERNAL -H ldapi:/// -b cn=config olcSuffix | grep ^olcSuffix | awk '/ */{ print $2 }'`
LDAP_ADMIN_DN=`grep 'adminDn="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{ print $2 }'`
LDAP_ADMIN_PW=`grep 'adminPassword="' /etc/fusiondirectory/fusiondirectory.conf | awk -F'"' '{print $2 }'`

# FIXME: We should break this into two parts in case ou=fai already
#        exists and breaks the ldapadd...  we'll still want
#        ou=squeeze to be added in any case.  Also we should do
#        the add using a different method (see other scripts).
cat > /tmp/fai-ldap-objects.ldif  <<-EOF
	dn: ou=fai,ou=configs,ou=systems,$LDAP_BASE_DN
	objectclass: organizationalUnit
	objectclass: top
	ou: fai
	
	dn: ou=squeeze,ou=fai,ou=configs,ou=systems,$LDAP_BASE_DN
	objectclass: organizationalUnit
	objectclass: top
	objectclass: FAIbranch
	ou: squeeze
EOF

# -x - use simple authentication instead of SASL FIXME: Does this make a difference?
#ldapadd -H <ldap uri> -x -D <binddn> -w <passwd> -f /tmp/new-ldap-user.ldif
ldapadd -H ldaps://127.0.0.1:636 -x -D $LDAP_ADMIN_DN -w $LDAP_ADMIN_PW \
  -f /tmp/fai-ldap-objects.ldif

# The database files are built when gosa-si is restarted, and it takes some
# time.  Check /var/log/gosa-si-server.log to see when the db files have
# been built.  (It should take around 5-10 minutes).

/etc/init.d/gosa-si-server restart
/etc/init.d/gosa-si-client restart

# We need to refresh fts, the "fuse-tftp-supplicant" ie. the daemon
# that populates the pxelinux.cfg directory for tftp.
/etc/init.d/fts stop
umount /srv/fai/boot/pxelinux.cfg
/etc/init.d/fts start

# FIXME: In Fusion Directory 2.6.7 this is suddenly required...  is it a bug?
sed -i 's@copyPaste="false"@copyPaste="true"@' /etc/fusiondirectory/fusiondirectory.conf
# FIXME: The apache restart is probably is not required, but I've put it in anyway.  Find out one way or the other.
update-gosa
/etc/init.d/apache2 restart

# FIXME: Due to a bug this file can't be accessed (has permissions of 600)
#        These permissions are BAD though...  :-/
chmod 644 /srv/fai/nfsroot/live/filesystem.dir/etc/gosa-si/client.conf

# FIXME: We need to give some further instruction on using FAI /w Fusion
#        Directory here.
# FIXME: Remove the following nasty bug alert after it's fixed.
echo "BUG ALERT!!!"
echo "You will need to edit /usr/sbin/gosa-si-server and insert this line:"
echo '"ldap-server-dn"        => [\$ldap_server_dn, "<put your ldap server dn here>"],'
echo "Search for ldap-base and insert this line there.  This is a nasty bug workaround."
echo ""
echo "Be sure your DNS server is up to date with what is in LDAP by executing :"
echo "ldap2bind"
echo ""
echo "The following services should be added to a server in your Fusion Directory"
echo "infrastructure before setting up FAI :"
echo "   * Repository service/s - you should have already added this"
echo "   * Time service (NTP) - just a list of ntp services.  We installed a local"
echo "                          ntp service.  This isn't required. Debian hosts NTP."
echo "				eg. 0.debian.pool.ntp.org  (servers numbered 0 to 4)"
echo "   * LDAP service"
echo "   * DNS service"
echo "   * DHCP service - In the Bootup configuration add fai/pxelinux.0 as the boot"
echo "                    filename."

# Troubleshooting: Check out the LOGUSER variable in /etc/fai/fai.conf on your server.
#
# You must create a user eg. fai, and create an rhosts file to allow the root user
# on client machines to access this user without a password. Example of
# /home/<username>/.rhosts :
#           10.0.2.15 root
#
# chgrp fai /srv/tftp/fai;chmod g+w /srv/tftp/fai
#
# /etc/pam.d/rsh
#           #%PAM-1.0
#           #
#           auth     required       pam_rhosts.so
#           auth     required       pam_nologin.so
#           auth     required       pam_env.so
#           auth     required       pam_unix.so

