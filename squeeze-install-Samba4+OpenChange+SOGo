# We must run this script as root
if [ "$USER" != "root" ]; then
        echo "Must be root to execute script..."
        exit 1
fi

echo "WARNING! : At this time this script only works with Debian Wheezy"
echo "Feel free to expand this script beyond this scope."
echo "Ctrl-C to exit, or <enter> to continue :"
read dummy_val

if [ ! -d /var/lib/sogo ]; then
  echo "SOGo is not installed...  please run the SOGo installer script."
  exit 1
fi

apt-get update
apt-get install -y --allow-unauthenticated samba4 samba 

apt-get install -y --allow-unauthenticated openchangeserver sogo-openchange openchangeproxy openchange-ocsmanager openchange-rpcproxy


# Removing existing Samba config may be required.
rm /etc/samba/smb.conf

echo ""
echo "Please enter windows domain name for Samba4: "
read domain_name
echo "Please enter the Administrator password for the domain."
echo "Password must be at least 7 chars containing both a number, and mixed case"
echo "and/or non-alpha chars:"
read domain_pass

# Provision our AD domain (using Bind as our backend)
# FIXME: The instructions aren't clear, but apparently the realm(or perhaps the
#        domain?) must only be 15 characters or less.  Why?  Not clear either, but
#        perhaps it prevents domain relationships(???)
#        Documentation I've found elsewhere says this applies to the domain.
samba-tool domain provision --realm=`hostname --domain` --domain=$domain_name --adminpass="$domain_pass" --server-role='domain controller' --dns-backend=BIND9_DLZ

chown -R root:bind /var/lib/samba/private/
chown bind:bind /var/lib/samba/private/dns
chgrp bind /var/lib/samba/private/dns.keytab
chmod g+x /var/lib/samba/private/dns.keytab
chmod 755 /var/lib/samba/private/dns

cat >> /etc/bind/named.conf <<-EOF
	include "/var/lib/samba/private/named.conf";
EOF

cat >> /etc/bind/named.conf.options <<-EOF
	tkey-gssapi-keytab "/var/lib/samba/private/dns.keytab";
EOF

# NOTE: Active Directory relies heavily on special DNS entries for detecting
#       network resources.  As we're using Bind9 is our DNS server we need
#       some extra configuration to allow Samba4 to communicate dynamic DNS
#       info.

# Make changes required by OpenChange to the newly created Samba4 config.
# If we ever decide to use Samba4 as a DNS server we'll need to enable dlz
# below.
sed -i 's@\[global\]@\[global\]\
\
	\#\#\# Configuration required by OpenChange server \#\#\#\
	dcerpc endpoint servers = epmapper, mapiproxy\
	dcerpc_mapiproxy:server = true\
	dcerpc_mapiproxy:interfaces = exchange_emsmdb, exchange_nsp, exchange_ds_rfr\
	\#\#\# Configuration required by OpenChange server \#\#\#\
@' /etc/samba/smb.conf



# Samba4 is started as root, so link SOGo config to root home directory.
ln -s ~sogo/GNUstep /root/

openchange_provision
openchange_provision --openchangedb

/etc/init.d/samba4 start
/etc/init.d/openchange-ocsmanager start

# By default an Administrator account is created.  To create other new users :
# samba-tool user add JohnDoe

# ...and in OpenChange...
openchange_newuser --create Administrator
# openchange_newuser --create JohnDoe

# FIXME: Is mapiprofile actually required, or is it only a testing tool?
# apt-get install mapiprofileclient
# mapiprofile --create -P testing -S -I 192.168.1.109 --domain=STRATEGICIT --realm=strategicit.homelinux.net --username=JohnDoe --password='Mypassword123'

# mapiprofile --list

# mapiprofile --dump -P testing

# Testing:
# Shut down samba, then restart with the following commandline :
# samba -d3 -i -M single
# If OpenChange started correctly something similar to the following should
# be visible in the output :
#
# 42.    DCERPC endpoint server 'epmapper' registered
# [...]
# 57.    DCERPC endpoint server 'dnsserver' registered
# 58.    DCERPC endpoint server 'exchange_emsmdb' registered
# 59.    DCERPC endpoint server 'exchange_nsp' registered
# 60.    DCERPC endpoint server 'exchange_ds_rfr' registered
# 61.    DCERPC endpoint server 'mapiproxy' registered
# [...]
# 66.    MAPIPROXY server 'exchange_ds_rfr' registered
# 67.    MAPIPROXY server 'exchange_nsp' registered
# 68.    MAPIPROXY server 'exchange_emsmdb' registered
# 69.    MAPIPROXY server mode enabled
# 70.    MAPIPROXY proxy mode disabled
# 71.    mapiproxy_server_load 'exchange_nsp' (OpenChange NSPI server)
# 72.    dcesrv_exchange_nsp_init
# 73.    mapiproxy_server_load 'exchange_emsmdb' (OpenChange EMSMDB server)
# 74.    mapiproxy_server_load 'exchange_ds_rfr' (OpenChange RFR server)

########################################################
# To further test :
# Install the openchangeclient package, and follow the instructions on
# the openchange website.

################################################
# By default the Administrator account is setup, we'll just have to extend it in OpenChange. However we need to create other users. To perform this task, use the following command:

#$ sudo PYTHONPATH=$PYTHONPATH /usr/local/samba/bin/samba-tool user add JohnDoe 'openchange2!'
#User 'JohnDoe' created successfully


# Setting up mapiprofile
#
# Creating the profile
# 
# mapiprofile is a command line tool designed to provide administrative support for OpenChange MAPI profiles.
# 
# A profile in this context represents a single user's connection to a server. It can be thought of as a user's account information stored on the client side. Most OpenChange utilities make use of the profile information stored in the local profile database, often by referring to the name of the profile.
# 
# We are now creating a MAPI profile for JohnDoe user. mapiprofile requires several arguments to be set up to start creating a profile:
# Command 	Description
# --create 	MAPI profile creation operation
# -P testing 	Create a profile named testing
# -S 	Make this profile the default one
# -I 	Specify openchange server IP address
# --domain 	Specify openchange domain
# --realm 	Specify openchange realm
# --username 	Specify OpenChange username
# --password 	Specify OpenChange user's password
# 
# $ /usr/local/samba/bin/mapiprofile --create -P testing -S   \
# -I 192.168.102.48 --domain=OC --realm=oc.local              \
# --username=JohnDoe --password='openchange2!' 
# Profile default completed and added to database /home/openchange/.openchange/profiles.ldb
# Profile default is now set the default one
# 
# The server side output matching the command above is available here.
# Listing profiles
# 
# The profile is now available within mapiprofile's list:
# 
# $ /usr/local/samba/bin/mapiprofile --list
# We have 1 profile in the database:
#   Profile = testing [default]
# 
# Dumping profiles
# 
# Profile information can be dumped using the command below:
# 
# $ /usr/local/samba/bin/mapiprofile --dump -P testing
# Profile: testing
# exchange server == exchange 2000
# encryption      == no
# username        == JohnDoe
# password        == openchange2!
# mailbox         == /o=First Organization/ou=First Administrative Group/cn=Recipients/cn=JohnDoe
# workstation     == precog
# domain          == OC
# server          == 192.168.102.48

